package restfulwebservice.model;
// Generated May 26, 2017 8:19:28 AM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * PlannedPayments generated by hbm2java
 */
@XmlRootElement(name = "planned_payments")
@XmlAccessorType(XmlAccessType.FIELD)
@Entity
@Table(name = "planned_payments", catalog = "student_loans")
public class PlannedPayments implements java.io.Serializable {
	@XmlElement
	private int regularOrderId;
	@XmlElement
	private RefPaymentStatus refPaymentStatus;
	@XmlElement
	private Students students;
	@XmlElement
	private Date paymentDueDate;
	@XmlElement
	private String plannedPaymentAmount;
	@XmlElement
	private String otherPaymentDetails;

	public PlannedPayments() {
	}

	public PlannedPayments(int regularOrderId) {
		this.regularOrderId = regularOrderId;
	}

	public PlannedPayments(int regularOrderId, RefPaymentStatus refPaymentStatus, Students students,
			Date paymentDueDate, String plannedPaymentAmount, String otherPaymentDetails) {
		this.regularOrderId = regularOrderId;
		this.refPaymentStatus = refPaymentStatus;
		this.students = students;
		this.paymentDueDate = paymentDueDate;
		this.plannedPaymentAmount = plannedPaymentAmount;
		this.otherPaymentDetails = otherPaymentDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "regular_order_id", unique = true, nullable = false)
	public int getRegularOrderId() {
		return this.regularOrderId;
	}

	public void setRegularOrderId(int regularOrderId) {
		this.regularOrderId = regularOrderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payment_status_code")
	public RefPaymentStatus getRefPaymentStatus() {
		return this.refPaymentStatus;
	}

	public void setRefPaymentStatus(RefPaymentStatus refPaymentStatus) {
		this.refPaymentStatus = refPaymentStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_id")
	public Students getStudents() {
		return this.students;
	}

	public void setStudents(Students students) {
		this.students = students;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "payment_due_date", length = 10)
	public Date getPaymentDueDate() {
		return this.paymentDueDate;
	}

	public void setPaymentDueDate(Date paymentDueDate) {
		this.paymentDueDate = paymentDueDate;
	}

	@Column(name = "planned_payment_amount", length = 45)
	public String getPlannedPaymentAmount() {
		return this.plannedPaymentAmount;
	}

	public void setPlannedPaymentAmount(String plannedPaymentAmount) {
		this.plannedPaymentAmount = plannedPaymentAmount;
	}

	@Column(name = "other_payment_details", length = 45)
	public String getOtherPaymentDetails() {
		return this.otherPaymentDetails;
	}

	public void setOtherPaymentDetails(String otherPaymentDetails) {
		this.otherPaymentDetails = otherPaymentDetails;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((otherPaymentDetails == null) ? 0 : otherPaymentDetails.hashCode());
		result = prime * result + ((paymentDueDate == null) ? 0 : paymentDueDate.hashCode());
		result = prime * result + ((plannedPaymentAmount == null) ? 0 : plannedPaymentAmount.hashCode());
		result = prime * result + ((refPaymentStatus == null) ? 0 : refPaymentStatus.hashCode());
		result = prime * result + ((students == null) ? 0 : students.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PlannedPayments other = (PlannedPayments) obj;
		if (otherPaymentDetails == null) {
			if (other.otherPaymentDetails != null)
				return false;
		} else if (!otherPaymentDetails.equals(other.otherPaymentDetails))
			return false;
		if (paymentDueDate == null) {
			if (other.paymentDueDate != null)
				return false;
		} else if (!paymentDueDate.equals(other.paymentDueDate))
			return false;
		if (plannedPaymentAmount == null) {
			if (other.plannedPaymentAmount != null)
				return false;
		} else if (!plannedPaymentAmount.equals(other.plannedPaymentAmount))
			return false;
		if (refPaymentStatus == null) {
			if (other.refPaymentStatus != null)
				return false;
		} else if (!refPaymentStatus.equals(other.refPaymentStatus))
			return false;
		if (students == null) {
			if (other.students != null)
				return false;
		} else if (!students.equals(other.students))
			return false;
		return true;
	}

}
