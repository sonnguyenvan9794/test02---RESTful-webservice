package restfulwebservice.model;
// Generated May 26, 2017 8:19:28 AM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Accounts generated by hbm2java
 */
@XmlRootElement(name = "accounts")
@XmlAccessorType(XmlAccessType.FIELD)
@Entity
@Table(name = "accounts", catalog = "student_loans")
public class Accounts implements java.io.Serializable {
	@XmlElement
	private int accountId;
	@XmlElement
	private RefAccountTypes refAccountTypes;
	@XmlElement
	private RefBanks refBanks;
	@XmlElement
	private Students students;
	@XmlElement
	private String accountNumber;
	@XmlElement
	private String otherAccountDetails;

	public Accounts() {
	}

	public Accounts(int accountId) {
		this.accountId = accountId;
	}

	public Accounts(int accountId, RefAccountTypes refAccountTypes, RefBanks refBanks, Students students,
			String accountNumber, String otherAccountDetails) {
		this.accountId = accountId;
		this.refAccountTypes = refAccountTypes;
		this.refBanks = refBanks;
		this.students = students;
		this.accountNumber = accountNumber;
		this.otherAccountDetails = otherAccountDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "account_id", unique = true, nullable = false)
	public int getAccountId() {
		return this.accountId;
	}

	public void setAccountId(int accountId) {
		this.accountId = accountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_type_code")
	public RefAccountTypes getRefAccountTypes() {
		return this.refAccountTypes;
	}

	public void setRefAccountTypes(RefAccountTypes refAccountTypes) {
		this.refAccountTypes = refAccountTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bank_code")
	public RefBanks getRefBanks() {
		return this.refBanks;
	}

	public void setRefBanks(RefBanks refBanks) {
		this.refBanks = refBanks;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_id")
	public Students getStudents() {
		return this.students;
	}

	public void setStudents(Students students) {
		this.students = students;
	}

	@Column(name = "account_number", length = 45)
	public String getAccountNumber() {
		return this.accountNumber;
	}

	public void setAccountNumber(String accountNumber) {
		this.accountNumber = accountNumber;
	}

	@Column(name = "other_account_details", length = 45)
	public String getOtherAccountDetails() {
		return this.otherAccountDetails;
	}

	public void setOtherAccountDetails(String otherAccountDetails) {
		this.otherAccountDetails = otherAccountDetails;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Accounts other = (Accounts) obj;
		if (accountNumber == null) {
			if (other.accountNumber != null)
				return false;
		} else if (!accountNumber.equals(other.accountNumber))
			return false;
		if (otherAccountDetails == null) {
			if (other.otherAccountDetails != null)
				return false;
		} else if (!otherAccountDetails.equals(other.otherAccountDetails))
			return false;
		if (refAccountTypes == null) {
			if (other.refAccountTypes != null)
				return false;
		} else if (!refAccountTypes.equals(other.refAccountTypes))
			return false;
		if (refBanks == null) {
			if (other.refBanks != null)
				return false;
		} else if (!refBanks.equals(other.refBanks))
			return false;
		if (students == null) {
			if (other.students != null)
				return false;
		} else if (!students.equals(other.students))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Accounts [accountId=" + accountId + ", refAccountTypes=" + refAccountTypes + ", refBanks=" + refBanks
				+ ", students=" + students + ", accountNumber=" + accountNumber + ", otherAccountDetails="
				+ otherAccountDetails + "]";
	}

}
