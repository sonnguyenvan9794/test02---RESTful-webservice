package restfulwebservice.model;
// Generated May 26, 2017 8:19:28 AM by Hibernate Tools 5.2.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * StudentLoans generated by hbm2java
 */
@Entity
@Table(name = "student_loans", catalog = "student_loans")
public class StudentLoans implements java.io.Serializable {

	private int studentLoanId;
	private Guarantors guarantors;
	private RefLoanStatus refLoanStatus;
	private StandardLoans standardLoans;
	private Students students;
	private String studentLoanAmount;
	private String studentLoanPeriod;
	private Date firstRepaymentDate;
	private Date lastPaymentDate;
	private String studentLoanComments;
	private String studentLoanDetails;

	public StudentLoans() {
	}

	public StudentLoans(int studentLoanId) {
		this.studentLoanId = studentLoanId;
	}

	public StudentLoans(int studentLoanId, Guarantors guarantors, RefLoanStatus refLoanStatus,
			StandardLoans standardLoans, Students students, String studentLoanAmount, String studentLoanPeriod,
			Date firstRepaymentDate, Date lastPaymentDate, String studentLoanComments, String studentLoanDetails) {
		this.studentLoanId = studentLoanId;
		this.guarantors = guarantors;
		this.refLoanStatus = refLoanStatus;
		this.standardLoans = standardLoans;
		this.students = students;
		this.studentLoanAmount = studentLoanAmount;
		this.studentLoanPeriod = studentLoanPeriod;
		this.firstRepaymentDate = firstRepaymentDate;
		this.lastPaymentDate = lastPaymentDate;
		this.studentLoanComments = studentLoanComments;
		this.studentLoanDetails = studentLoanDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "student_loan_id", unique = true, nullable = false)
	public int getStudentLoanId() {
		return this.studentLoanId;
	}

	public void setStudentLoanId(int studentLoanId) {
		this.studentLoanId = studentLoanId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "guarantor_id")
	public Guarantors getGuarantors() {
		return this.guarantors;
	}

	public void setGuarantors(Guarantors guarantors) {
		this.guarantors = guarantors;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "loan_status_code")
	public RefLoanStatus getRefLoanStatus() {
		return this.refLoanStatus;
	}

	public void setRefLoanStatus(RefLoanStatus refLoanStatus) {
		this.refLoanStatus = refLoanStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "standard_loan_id")
	public StandardLoans getStandardLoans() {
		return this.standardLoans;
	}

	public void setStandardLoans(StandardLoans standardLoans) {
		this.standardLoans = standardLoans;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_id")
	public Students getStudents() {
		return this.students;
	}

	public void setStudents(Students students) {
		this.students = students;
	}

	@Column(name = "student_loan_amount", length = 45)
	public String getStudentLoanAmount() {
		return this.studentLoanAmount;
	}

	public void setStudentLoanAmount(String studentLoanAmount) {
		this.studentLoanAmount = studentLoanAmount;
	}

	@Column(name = "student_loan_period", length = 45)
	public String getStudentLoanPeriod() {
		return this.studentLoanPeriod;
	}

	public void setStudentLoanPeriod(String studentLoanPeriod) {
		this.studentLoanPeriod = studentLoanPeriod;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "first_repayment_date", length = 10)
	public Date getFirstRepaymentDate() {
		return this.firstRepaymentDate;
	}

	public void setFirstRepaymentDate(Date firstRepaymentDate) {
		this.firstRepaymentDate = firstRepaymentDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "last_payment_date", length = 10)
	public Date getLastPaymentDate() {
		return this.lastPaymentDate;
	}

	public void setLastPaymentDate(Date lastPaymentDate) {
		this.lastPaymentDate = lastPaymentDate;
	}

	@Column(name = "student_loan_comments", length = 45)
	public String getStudentLoanComments() {
		return this.studentLoanComments;
	}

	public void setStudentLoanComments(String studentLoanComments) {
		this.studentLoanComments = studentLoanComments;
	}

	@Column(name = "student_loan_details", length = 45)
	public String getStudentLoanDetails() {
		return this.studentLoanDetails;
	}

	public void setStudentLoanDetails(String studentLoanDetails) {
		this.studentLoanDetails = studentLoanDetails;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		StudentLoans other = (StudentLoans) obj;
		if (firstRepaymentDate == null) {
			if (other.firstRepaymentDate != null)
				return false;
		} else if (!firstRepaymentDate.equals(other.firstRepaymentDate))
			return false;
		if (guarantors == null) {
			if (other.guarantors != null)
				return false;
		} else if (!guarantors.equals(other.guarantors))
			return false;
		if (lastPaymentDate == null) {
			if (other.lastPaymentDate != null)
				return false;
		} else if (!lastPaymentDate.equals(other.lastPaymentDate))
			return false;
		if (refLoanStatus == null) {
			if (other.refLoanStatus != null)
				return false;
		} else if (!refLoanStatus.equals(other.refLoanStatus))
			return false;
		if (standardLoans == null) {
			if (other.standardLoans != null)
				return false;
		} else if (!standardLoans.equals(other.standardLoans))
			return false;
		if (studentLoanAmount == null) {
			if (other.studentLoanAmount != null)
				return false;
		} else if (!studentLoanAmount.equals(other.studentLoanAmount))
			return false;
		if (studentLoanComments == null) {
			if (other.studentLoanComments != null)
				return false;
		} else if (!studentLoanComments.equals(other.studentLoanComments))
			return false;
		if (studentLoanDetails == null) {
			if (other.studentLoanDetails != null)
				return false;
		} else if (!studentLoanDetails.equals(other.studentLoanDetails))
			return false;
		if (studentLoanPeriod == null) {
			if (other.studentLoanPeriod != null)
				return false;
		} else if (!studentLoanPeriod.equals(other.studentLoanPeriod))
			return false;
		if (students == null) {
			if (other.students != null)
				return false;
		} else if (!students.equals(other.students))
			return false;
		return true;
	}

}
